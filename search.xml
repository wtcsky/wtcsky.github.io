<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>拓扑排序</title>
      <link href="/2021/11/19/%E3%80%8A%E5%85%B3%E4%BA%8E%E7%AE%97%E6%B3%95%E3%80%8B/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
      <url>/2021/11/19/%E3%80%8A%E5%85%B3%E4%BA%8E%E7%AE%97%E6%B3%95%E3%80%8B/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h1><p>看这个部分的原因是什么呢？啊，我忘记了，可能是数据老师上课的时候讲过恰巧听见了？(<del>完全没有听过课</del>)，也可能是看了一眼发现其实并不难，然后就总结一下吧。</p><p>当然我肯定不是自己靠意念学会的，主要就是看了CSDN的一篇文章，很不错，受益匪浅！在开始我自己的”复述”之前，就先把他的链接放下吧！<a href="https://blog.csdn.net/qq_41713256/article/details/80805338?ops_request_misc=%7B%22request_id%22:%22163730555316780271585926%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163730555316780271585926&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-80805338.first_rank_v2_pc_rank_v29&utm_term=%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">拓扑排序入门（真的很简单）_安得广厦千万间的博客-CSDN博客_拓扑排序</a>。实际上这位大神确实讲的很清楚了，我写的原因是为了温习自己所学，以后看自己的文字也更亲切一点吧！</p><h2 id="什么是拓扑排序？"><a href="#什么是拓扑排序？" class="headerlink" title="什么是拓扑排序？"></a>什么是拓扑排序？</h2><p>首先拓扑排序必须是在一个有向无环图(DAG)中，把入度为0的节点输出，直到所有的节点都输出，所输出的序列就是拓扑排序的序列。</p><p><img src="https://i.loli.net/2021/11/19/xrAjbsJhPFMLo5C.jpg" alt="拓扑排序示意图.jpg"></p><p>如上图所示，a的入度为0输出a，c的入度为0输出c ……最终得到的序列就是acbfde</p><p>当然，由于在同一时间可能有多个节点的入度为0，那么拓扑排序所得的序列就不是唯一的，而让他变成唯一的可能就是用到拓扑排序的题的精髓所在(如：字典序，倒序，数小优先  等等……)</p><p>如果看了以上的内容你还是懵懵懂懂，那么，举一个生活上的例子：小明是体育委员，他想给同学们按照身高来排队，他每次只能对比两个同学的身高，经过两个两个人的比较，最终就可以得到排好的队伍(<strong>由部分的对比来完成整体的对比</strong>)</p><h2 id="拓扑排序的朴素写法"><a href="#拓扑排序的朴素写法" class="headerlink" title="拓扑排序的朴素写法"></a>拓扑排序的朴素写法</h2><h3 id="CODE："><a href="#CODE：" class="headerlink" title="CODE："></a>CODE：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[N];<span class="comment">//入度值</span></span><br><span class="line"><span class="keyword">bool</span> pos[N][N]; <span class="comment">//边</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,x,y,tmp;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;<span class="comment">//n个人，m对关系</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>(pos[x][y]==<span class="literal">false</span>) &#123;</span><br><span class="line">            pos[x][y] = <span class="literal">true</span>; <span class="comment">//从x可以到达y </span></span><br><span class="line">            a[y]++; <span class="comment">//y入度+1 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) &#123;<span class="comment">//遍历入度为0的节点</span></span><br><span class="line">            <span class="keyword">if</span>(a[j]==<span class="number">0</span>) &#123;</span><br><span class="line">                cout&lt;&lt;j&lt;&lt;<span class="string">&quot; &quot;</span>; <span class="comment">//输出序列，也可以用数组/vector保存</span></span><br><span class="line">                a[j]--;</span><br><span class="line">                tmp = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">            <span class="keyword">if</span>(pos[tmp][j])</span><br><span class="line">                a[j]--;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h3><p>很容易就能想到朴素写法，就是不断的遍历节点，直到所有节点都输出了(注意如果有重复输入的关系，可能需要加一点东西)。</p><p>朴素的写法的复杂度是O(n^2)。很容易看出来，确实好写，大多数情况感觉用不到。。</p><h2 id="优化版的写法"><a href="#优化版的写法" class="headerlink" title="优化版的写法"></a>优化版的写法</h2><h3 id="CODE：-1"><a href="#CODE：-1" class="headerlink" title="CODE："></a>CODE：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; edge[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)  <span class="comment">//n  节点的总数</span></span><br><span class="line">    <span class="keyword">if</span>(in[i]==<span class="number">0</span>) </span><br><span class="line">        q.<span class="built_in">push</span>(i);  <span class="comment">//将入度为0的点入队列</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; res;   <span class="comment">//ans 为拓扑序列</span></span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp=q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>(); <span class="comment">// 选一个入度为0的点，出队列</span></span><br><span class="line">    res.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;edge[tmp].<span class="built_in">size</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=edge[p][i];</span><br><span class="line">        in[x]--;</span><br><span class="line">        <span class="keyword">if</span>(in[x]==<span class="number">0</span>)</span><br><span class="line">            q.<span class="built_in">push</span>(x);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(res.<span class="built_in">size</span>()==n)   </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;res.<span class="built_in">size</span>();i++)</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">&quot;%d &quot;</span>,res[i] );</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No Answer!\n&quot;</span>);   <span class="comment">//  ans 中的长度与n不相等，就说明无拓扑序列</span></span><br></pre></td></tr></table></figure><h3 id="解释：-1"><a href="#解释：-1" class="headerlink" title="解释："></a>解释：</h3><p>这样的复杂度是O(n+m)点和边的和，太好了吧！！这样就是把每次用n来遍历一个节点换成用队列来遍历，这样的话减完以后变成0的节点直接放在队伍后面就可以了，那么实际上就会跑节点数量和边的数量的和！</p><h2 id="例题1-ly的排队问题"><a href="#例题1-ly的排队问题" class="headerlink" title="例题1 -  ly的排队问题"></a>例题1 - <a href="https://acm.zcmu.edu.cn/JudgeOnline/problem.php?id=2153"> ly的排队问题</a></h2><h3 id="CODE"><a href="#CODE" class="headerlink" title="CODE:"></a>CODE:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> come[N];<span class="comment">//入度</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,vector&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; q; <span class="comment">//从小到大字典序</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; edge[<span class="number">100</span>],res;<span class="comment">//存边，存结果</span></span><br><span class="line">set&lt;<span class="keyword">int</span>&gt; k;<span class="comment">//是否出现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)<span class="comment">//一共26个字母</span></span><br><span class="line"><span class="keyword">if</span>(k.<span class="built_in">count</span>(i) &amp;&amp; come[i]==<span class="number">0</span>)</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = q.<span class="built_in">top</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">res.<span class="built_in">push_back</span>(tmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;edge[tmp].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = edge[tmp][i];</span><br><span class="line">come[x]--;</span><br><span class="line"><span class="keyword">if</span>(come[x]==<span class="number">0</span> &amp;&amp; k.<span class="built_in">count</span>(x))</span><br><span class="line">q.<span class="built_in">push</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(res.<span class="built_in">size</span>()==k.<span class="built_in">size</span>()) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;res.<span class="built_in">size</span>();i++)</span><br><span class="line"><span class="built_in">putchar</span>(res[i]+<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;No Answer!&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;s) &#123;</span><br><span class="line"><span class="keyword">int</span> x = s[<span class="number">0</span>] - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">int</span> y = s[<span class="number">2</span>] - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">k.<span class="built_in">insert</span>(x);k.<span class="built_in">insert</span>(y);</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>]==<span class="string">&#x27;&gt;&#x27;</span>) &#123;</span><br><span class="line">edge[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">come[y]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">edge[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">come[x]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//上面就是建图的过程</span></span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题2-逃生"><a href="#例题2-逃生" class="headerlink" title="例题2 - 逃生"></a>例题2 - <a href="http://hdu.hustoj.com/showproblem.php?pid=4857">逃生</a></h2><h3 id="CODE：-2"><a href="#CODE：-2" class="headerlink" title="CODE："></a>CODE：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q;<span class="comment">//队列</span></span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;link[N],res;<span class="comment">//边，答案</span></span><br><span class="line"><span class="keyword">int</span> come[N];</span><br><span class="line"><span class="keyword">int</span> n,m,x,y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(come[i]==<span class="number">0</span>)</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = q.<span class="built_in">top</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">res.<span class="built_in">push_back</span>(tmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;link[tmp].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line"><span class="keyword">int</span> v = link[tmp][i];</span><br><span class="line">come[v]--;</span><br><span class="line"><span class="keyword">if</span>(come[v]==<span class="number">0</span>)</span><br><span class="line">q.<span class="built_in">push</span>(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=res.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)<span class="comment">//倒序输出</span></span><br><span class="line">cout&lt;&lt;res[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout&lt;&lt;res[<span class="number">0</span>]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;<span class="comment">//重置数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">link[i].<span class="built_in">clear</span>();</span><br><span class="line">come[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())q.<span class="built_in">pop</span>();</span><br><span class="line">res.<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">link[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">come[x]++;</span><br><span class="line">&#125;<span class="comment">// 反向建图</span></span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解析："><a href="#解析：" class="headerlink" title="解析："></a>解析：</h3><p>这个题与众不同的地方就是它采用的排序方式是小数优先？不是很懂，总之这样的排序方式，需要反向建图，然后从后面找最大的放入队列中，因为是反向建图，所以最后也是倒序输出。</p><p>6 -&gt; 4 -&gt; 1  ↘</p><p>3 -&gt; 9 -&gt; 2 -&gt;  0</p><p>5 -&gt; 7 -&gt; 8 ↗</p><p>如果图是这样的话，字典序输出肯定就是3 5 6 4 1 7 8 9 2 0</p><p>但是我们需要的输出是 6 4 1 3 9 2 5 7 8 0</p><p>后面的数一定是大的，那么就倒着取，0,8,7,5,2,9,3,1,4,6。</p><p>最后倒序输出，这里是恰好一行一行输出……实际上并不是而是从后往前找大的输出。</p>]]></content>
      
      
      <categories>
          
          <category> 《关于算法》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 拓扑 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day11</title>
      <link href="/2021/11/16/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day11/"/>
      <url>/2021/11/16/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day11/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day11"><a href="#Day11" class="headerlink" title="Day11"></a>Day11</h1><h2 id="1605C-Dominant-Character"><a href="#1605C-Dominant-Character" class="headerlink" title="1605C - Dominant Character"></a><a href="https://codeforces.com/problemset/problem/1605/C">1605C - Dominant Character</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>字符串有a、b、c三种字符：</p><ul><li>a的绝对数量大于b</li><li>a的绝对数量大于c</li><li>最少有两个字符</li><li>可以删除字符串前面和后面任意连续的字符</li></ul><p>问最短的满足条件的串有多长？</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>其实只有有限的情况：</p><p>aa aba aca abca acba abbacca accabba</p><p>只有上面的7种情况，其他的情况可能包含有上面的情况。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">string s,ss;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">cin&gt;&gt;len;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-6</span>;i++) &#123;</span><br><span class="line">ss = s.<span class="built_in">substr</span>(i,<span class="number">7</span>);</span><br><span class="line"><span class="keyword">if</span>(ss==<span class="string">&quot;abbacca&quot;</span>||ss==<span class="string">&quot;accabba&quot;</span>)</span><br><span class="line">res = <span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-3</span>;i++) &#123;</span><br><span class="line">ss = s.<span class="built_in">substr</span>(i,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(ss==<span class="string">&quot;abca&quot;</span>||ss==<span class="string">&quot;acba&quot;</span>)</span><br><span class="line">res = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-2</span>;i++) &#123;</span><br><span class="line">ss = s.<span class="built_in">substr</span>(i,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(ss==<span class="string">&quot;aba&quot;</span>||ss==<span class="string">&quot;aca&quot;</span>)</span><br><span class="line">res = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-1</span>;i++) &#123;</span><br><span class="line">ss = s.<span class="built_in">substr</span>(i,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(ss==<span class="string">&quot;aa&quot;</span>)</span><br><span class="line">res = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>试着手写一下情况，说不定只有有限个情况。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day10</title>
      <link href="/2021/11/15/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day10/"/>
      <url>/2021/11/15/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day10/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day10"><a href="#Day10" class="headerlink" title="Day10"></a>Day10</h1><h2 id="1605A-A-M-Deviation"><a href="#1605A-A-M-Deviation" class="headerlink" title="1605A - A.M. Deviation"></a><a href="https://codeforces.com/problemset/problem/1605/A">1605A - A.M. Deviation</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>给三个数a,b,c，可以让一个数+1任意其它数-1，求a+c-2*b的最小绝对值。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>直接把a和c加起来看成一个整体，然后发现对于a+c-2<em>b这个式子，每次操作可以让整体+3或者-3，所以只要对a+c-2</em>b取余3即可。</p><p>如果余数是2，那么可以再+3(或-3)让他的绝对值变成1，所以余数是1和2的时候输出1，否则输出0</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">a += c;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">abs</span>(a<span class="number">-2</span>*b)%<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">2</span> || t==<span class="number">1</span>)</span><br><span class="line">cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>整体看</p><h2 id="1605B-Reverse-Sort"><a href="#1605B-Reverse-Sort" class="headerlink" title="1605B - Reverse Sort"></a><a href="https://codeforces.com/problemset/problem/1605/B">1605B - Reverse Sort</a></h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意:"></a>题意:</h3><p>把01串的1全都放在最后面，可以进行的操作是：</p><ul><li>任选n个数对称交换位置</li></ul><p>输出需要进行几次操作，每次操作选取几个数，这几个数分别是什么</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>看一看有几个1，后面的位置全是1，那么前面的位置全是0，记录一下0的位置上有几个1，输出2*1的个数就是选取的个数。</p><p>只需要把（0位置上的1）和（1位置上的0）的位置输出了即可。</p><p>如果给定的就是已经排好了的，进行0此操作，否则进行一次即可。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;s;</span><br><span class="line"><span class="keyword">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">t++;</span><br><span class="line">t = len - t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;t;i++) </span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(num==<span class="number">0</span>) &#123;</span><br><span class="line">cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;num*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) </span><br><span class="line"><span class="keyword">if</span>(i &lt; t &amp;&amp; s[i]==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i &gt;= t &amp;&amp;s[i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;i+<span class="number">1</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>看整体</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲谈-1 关于我最近在干什么这件事！</title>
      <link href="/2021/11/12/%E3%80%8A%E9%97%B2%E8%B0%88%E5%BD%95%E3%80%8B/%E9%97%B2%E8%B0%88-1/"/>
      <url>/2021/11/12/%E3%80%8A%E9%97%B2%E8%B0%88%E5%BD%95%E3%80%8B/%E9%97%B2%E8%B0%88-1/</url>
      
        <content type="html"><![CDATA[<p>这篇闲谈是写完扩展域并查集后临时起兴写的，也算是再给博客开一个小分类了哈哈哈哈！</p><p>写完博客其实已经是11.12了，但是吧这是11.11开始写的，中途出了点小情况，电脑绿屏了！！没有保存导致我又重新搞了一遍，所以进度慢了一点┭┮﹏┭┮，我真的没有在摸鱼啊(<del>小摸不算摸好吧</del>)，所以说到最后11号没有更新CodeForce，不过问题应该不大。</p><p>下个月初(21年12月)就要参加第一次icpc的区域赛了！(南京站)确实是第一次，很高兴能有这样一个机会吧只能说，所以一定要尽力把握住机会，这还有二十来天一直在武装自己，希望能为队伍多出一点力！不能做一条咸鱼啊！到时候有什么情况我可能会有闲情逸致再来水一篇闲谈0.0。</p><p>哎呀还因为疫情的原因，学校可能要提前放假，本来就是晚上学一周，考试又尼玛提前了，这不折磨我吗，本来就是屁也不会，好难啊，好难啊，还得学点东西武装自己来面对南京站的比赛，还得应付考试，关键是四级考试也在中间夹着，太难搞了，周六考完四级，下周就要开始考试了，啥也没复习啊我擦！</p><p>已矣乎，车到山前必有路，船到桥头自然直。只能见机行事了，总之还是希望自己在第一次参加icpc区域赛也能拿到点什么吧(渴望铜牌)，当然了理想很丰满，现实我就不知道了，总之尽人事，听天命了！</p><p>ps.最好比赛之前能规划一下团队。</p>]]></content>
      
      
      <categories>
          
          <category> 《闲谈录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展域并查集</title>
      <link href="/2021/11/11/%E3%80%8A%E5%85%B3%E4%BA%8E%E7%AE%97%E6%B3%95%E3%80%8B/%E6%89%A9%E5%B1%95%E5%9F%9F%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
      <url>/2021/11/11/%E3%80%8A%E5%85%B3%E4%BA%8E%E7%AE%97%E6%B3%95%E3%80%8B/%E6%89%A9%E5%B1%95%E5%9F%9F%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="扩展域并查集"><a href="#扩展域并查集" class="headerlink" title="扩展域并查集"></a>扩展域并查集</h1><h2 id="关于定义："><a href="#关于定义：" class="headerlink" title="关于定义："></a>关于定义：</h2><p>​    并查集擅长的是<strong>动态维护图中具有传递性的关系</strong>。有的时候，我们需要传递的关系比较单一，但有的时候，传递的关系会比较复杂，这时候就需要用到并查集的扩展域。(扩展域并查集也叫种类并查集)</p><h2 id="例题1-食物链"><a href="#例题1-食物链" class="headerlink" title="例题1 - 食物链"></a>例题1 - 食物链</h2><p>食物链就属于是扩展域并查集的典中典问题了呀！</p><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>有三种动物A，B，C，这三种动物的食物链形成了环形：A吃B，B吃C，C吃A。</p><p>现在有N个动物，编号为1 - N，每个动物都是A，B，C中一种，但是我们并不知道是哪一种。</p><p>有人对这N个动物所构成的食物链关系用两种说话进行描述：</p><ul><li>“1 X Y”，表示X和Y是同类</li><li>“2 X Y”，表示X吃Y</li></ul><p>此人用上述两种说法，说出K句话，这K句话中有的是真话，有的是假话。当一句话满足下列三条之一时，这句话就是假话，否则就是真话：</p><ul><li>当前的话与前面的某些真话冲突</li><li>当前的话中X或Y比N大</li><li>当前的话表示X吃X</li></ul><p>你的任务是根据给定的N和K句话，输出假话的总数。</p><h3 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h3><p>很明显啊这道题里的关系不再是单纯的A和B是不是一家人，而是更多、更复杂的关系——吃与被吃以及同级的关系，这样的情况下就需要把并查集扩展，也就是用到我们的扩展域并查集。</p><p>这样的题我们就给每一个动物(人)的各种关系找出来，比如这道食物链问题存在的关系有”同类、食物、天敌”三种，我们就扩展出三份空间(当然分空间的方法有很多，只列举我常用的一种)：</p><ul><li>1 - N存他们的同类这一关系</li><li>N+1 - 2N存他们的食物这一关系</li><li>2N+1 - 3N存他们的天敌这一关系</li></ul><p>然后我们就再看操作上的问题：假设X的三种关系分别是Xself、Xfood、Xenemy(分别表示同类、食物、天敌)，同理Y的三种关系分别是Yself、Yfood、Yenemy。那么就会有两种情况：</p><ol><li>如果X和Y是同类：那么Xself和Yself合并、Xfood和Yfood合并、Xenemy和Yenemy合并。</li><li>如果X是Y的天敌：那么Xfood和Yself合并、Xself和Yenemy合并、Xenemy和Yfood合并。</li></ol><p>这样操作，就是把物种相同的关系存了起了(如X的食物是Y，那么X是Y的天敌，那么X的天敌是Y的食物，很显然这三个是就可以把关系理清楚，并且合并起来的也一定是同一个物种！)</p><p>接下来再说可能出现的两种信息冲突(也就是可能出现的两种错误形式):</p><ol><li>X和Y是相同物种的信息冲突：<ul><li>X是Y的天敌：Xfood = Yself </li><li>Y是X的天敌：Yfood=Xself</li></ul></li><li>X是Y的天敌的信息冲突：<ul><li>X和Y是同类：Xself = Yself</li><li>Y是X的天敌：Yfood=Xself</li></ul></li></ol><p>很显然如果信息正确，不可能会有冲突的集合出现！(在同一个集合里的一定是同一个物种)，如果满足上述条件，或者 x或y大于n(加一个特判即可)那么错误数+1。</p><h3 id="CODE："><a href="#CODE：" class="headerlink" title="CODE："></a>CODE：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> f[N];<span class="comment">//大于3*n即可 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; </span><br><span class="line"><span class="keyword">if</span>(f[x] == x)<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;<span class="comment">//并查集基本查找操作 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">combine</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123; </span><br><span class="line"><span class="keyword">int</span> dx = <span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">int</span> dy = <span class="built_in">find</span>(y);</span><br><span class="line">f[dx] = dy;</span><br><span class="line">&#125;<span class="comment">//并查集基本合并操作</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> q,x,y;</span><br><span class="line"><span class="keyword">int</span> Xself,Xfood,Xenemy;</span><br><span class="line"><span class="keyword">int</span> Yself,Yfood,Yenemy; </span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>*n;i++)f[i] = i;<span class="comment">//初始化 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">cin&gt;&gt;q&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(x&gt;n||y&gt;n) &#123;</span><br><span class="line">res++;<span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="comment">//特判错误情况2</span></span><br><span class="line">Xself=x,Xfood=x+n,Xenemy=x+<span class="number">2</span>*n;</span><br><span class="line">Yself=y,Yfood=y+n,Yenemy=y+<span class="number">2</span>*n;</span><br><span class="line"><span class="keyword">if</span>(q==<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(Xfood)==<span class="built_in">find</span>(Yself) || <span class="built_in">find</span>(Yfood)==<span class="built_in">find</span>(Xself)) &#123;</span><br><span class="line">res++;<span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="comment">//信息冲突</span></span><br><span class="line"><span class="built_in">combine</span>(Xself,Yself);</span><br><span class="line"><span class="built_in">combine</span>(Xfood,Yfood);</span><br><span class="line"><span class="built_in">combine</span>(Xenemy,Yenemy);</span><br><span class="line">&#125;<span class="comment">//同类 </span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">find</span>(Xself)==<span class="built_in">find</span>(Yself) || <span class="built_in">find</span>(Yfood)==<span class="built_in">find</span>(Xself)) &#123;</span><br><span class="line">res++;<span class="keyword">continue</span>;</span><br><span class="line">&#125; <span class="comment">//信息冲突</span></span><br><span class="line"><span class="built_in">combine</span>(Xfood,Yself);</span><br><span class="line"><span class="built_in">combine</span>(Xself,Yenemy);</span><br><span class="line"><span class="built_in">combine</span>(Xenemy,Yfood);</span><br><span class="line">&#125;<span class="comment">//X吃Y </span></span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题2-1594D-The-Number-of-Imposters"><a href="#例题2-1594D-The-Number-of-Imposters" class="headerlink" title="例题2.1594D - The Number of Imposters"></a>例题2.<a href="https://codeforces.com/problemset/problem/1594/D">1594D - The Number of Imposters</a></h2><p>这道题呢是写这篇博客的主要目的吧算是，刷CF的时间遇到了这个题，很有意思(毕竟并查集是最【优雅】的数据结构，让人很舒服而且还不难)。</p><h3 id="题目描述：-1"><a href="#题目描述：-1" class="headerlink" title="题目描述："></a>题目描述：</h3><p>有n个人，m对关系，每对关系u , v , s 表示u说v是s。每个人有两个身份，船员和冒名者，船员的话全部为真话，冒名者的话全部为假话。问最多有多少个冒名者。</p><h3 id="题目分析：-1"><a href="#题目分析：-1" class="headerlink" title="题目分析："></a>题目分析：</h3><p>确实是一个扩展域并查集，上一个题的主题是【关系】的话，那么这个题的主题就是【状态】——一个人存在的两种状态，那么扩展这方面就可以说过去了：</p><ul><li>1 - N 表示是好人的状态</li><li>N+1 - 2N 表示是坏人的状态</li></ul><p>那么就是操作上的问题，很容易能看出，如果s = “crewmate” 的时候a和b的身份是相同的(a是好人推出b是好人，a是坏人推出b是坏人)，反之s = “imposter” 的时候a和b的身份是相反的(a是好人推出b是坏人，a是坏人推出b是好人)：</p><ul><li>s = “crewmate” ：a和b合并，a+n和b+n合并</li><li>s = “imposter”   ：a和b+n合并，a+n和b合并</li></ul><p>其中a，b是好人状态，a+n和b+n是坏人状态。</p><p>然后就是本题的问题了：合并的同时还要记录这个集合坏人的数量！采取的方式就是:</p><ul><li>开始设置一个数组siz，让1 - N的初始值为0(因为是好人),1+N - 2N的初始值为1(因为是坏人)。</li><li>合并的同时如果两个不在同一个集合那么<code>f[dx]=dy,siz[dy]+=siz[dx],siz[dx]=0; </code>把坏人的数量转移！</li></ul><p>最后一个问题就是输出了！我最后怎么输出坏人的数量呢？这里先放下代码然后再解释！</p><h3 id="CODE：-1"><a href="#CODE：-1" class="headerlink" title="CODE："></a>CODE：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> f[N],siz[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f[x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">combine</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> dx = <span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">int</span> dy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(dx != dy) <span class="comment">// 合并坏人的数量</span></span><br><span class="line">f[dx]=dy,siz[dy]+=siz[dx],siz[dx]=<span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,m,a,b;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++) &#123;</span><br><span class="line">f[i] = i;</span><br><span class="line"><span class="keyword">if</span>(i&lt;=n)siz[i]=<span class="number">0</span>;<span class="comment">//好人状态</span></span><br><span class="line"><span class="keyword">else</span>siz[i]=<span class="number">1</span>;<span class="comment">//坏人状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--) &#123;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;s;</span><br><span class="line"><span class="keyword">if</span>(s==<span class="string">&quot;crewmate&quot;</span>)</span><br><span class="line"><span class="built_in">combine</span>(a,b),<span class="built_in">combine</span>(a+n,b+n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">combine</span>(a,b+n),<span class="built_in">combine</span>(a+n,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> dx = <span class="built_in">find</span>(i);</span><br><span class="line"><span class="keyword">int</span> dy = <span class="built_in">find</span>(i+n);</span><br><span class="line"><span class="keyword">if</span>(dx == dy) &#123;</span><br><span class="line">res = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dx==i)</span><br><span class="line">res+=<span class="built_in">max</span>(siz[dx],siz[dy]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面可以看到只跑了一个循环就得出了答案！</p><p>首先是如果一个人的好人状态和坏人状态同时出现，那么答案一定是-1，因为不存在。</p><p>如果他是祖先，那么就判断这个人是好人(i)的时候坏人多？还是这个人是坏人(i+n)的时候坏人多(siz大)？</p><p>为什么只需要遍历1-n呢？</p><p>最开始我也是不理解的，然后画了一个图，发现如果操作是：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s==<span class="string">&quot;crewmate&quot;</span>)</span><br><span class="line"><span class="built_in">combine</span>(a,b),<span class="built_in">combine</span>(a+n,b+n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">combine</span>(a,b+n),<span class="built_in">combine</span>(a+n,b);</span><br></pre></td></tr></table></figure><p>那么他的集合一定是对称的！我把好人状态合并，我就会把他们的坏人状态合并；我把好人和坏人合并(根是好人)，我就会把坏人和好人合并(根是坏人)。总之集合是对称的！根是同一个人的好人和坏人状态！</p><p><img src="https://i.loli.net/2021/11/12/I65aHbXYfRFv12o.jpg" alt="扩展域并查集示意图.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 《关于算法》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 并查集 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day9</title>
      <link href="/2021/11/10/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day9/"/>
      <url>/2021/11/10/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day9/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day9"><a href="#Day9" class="headerlink" title="Day9"></a>Day9</h1><h2 id="1594D-The-Number-of-Imposters"><a href="#1594D-The-Number-of-Imposters" class="headerlink" title="1594D - The Number of Imposters"></a><a href="https://codeforces.com/problemset/problem/1594/D">1594D - The Number of Imposters</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>有n个人，m对关系，每对关系u , v , s 表示u说v是s。每个人有两个身份，船员和冒名者，船员的话全部为真话，冒名者的话全部为假话。问最多有多少个冒名者。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>如果s是imposter那么u v一个是船员一个是冒名者，</p><p>如果s是crewmate那么u v两个都是船员或者两个都是冒名者。</p><p>用<strong>扩展域并查集</strong>来维护关系，然后遍历出坏人最多的情况。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> f[N],siz[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(f[x] == x) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">combine</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> dx = <span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">int</span> dy = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span>(dx != dy) </span><br><span class="line">f[dx]=dy,siz[dy]+=siz[dx],siz[dx]=<span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,m,a,b;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++) &#123;</span><br><span class="line">f[i] = i;</span><br><span class="line"><span class="keyword">if</span>(i&lt;=n)siz[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span>siz[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(m--) &#123;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;s;</span><br><span class="line"><span class="keyword">if</span>(s==<span class="string">&quot;crewmate&quot;</span>)</span><br><span class="line"><span class="built_in">combine</span>(a,b),<span class="built_in">combine</span>(a+n,b+n);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">combine</span>(a,b+n),<span class="built_in">combine</span>(a+n,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> dx = <span class="built_in">find</span>(i);</span><br><span class="line"><span class="keyword">int</span> dy = <span class="built_in">find</span>(i+n);</span><br><span class="line"><span class="keyword">if</span>(dx == dy) &#123;</span><br><span class="line">res = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dx==i)</span><br><span class="line">res+=<span class="built_in">max</span>(siz[dx],siz[dy]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>详细见:<a href="https://wtcsky.github.io/2021/11/11/%E3%80%8A%E5%85%B3%E4%BA%8E%E7%AE%97%E6%B3%95%E3%80%8B/%E6%89%A9%E5%B1%95%E5%9F%9F%E5%B9%B6%E6%9F%A5%E9%9B%86/">https://wtcsky.github.io/2021/11/11/%E3%80%8A%E5%85%B3%E4%BA%8E%E7%AE%97%E6%B3%95%E3%80%8B/%E6%89%A9%E5%B1%95%E5%9F%9F%E5%B9%B6%E6%9F%A5%E9%9B%86/</a></p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客维护日志-2</title>
      <link href="/2021/11/08/%E3%80%8A%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97-2/"/>
      <url>/2021/11/08/%E3%80%8A%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97-2/</url>
      
        <content type="html"><![CDATA[<p>为了方便查找，添加了站内搜索功能！</p><h1 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h1><ol><li><code>npm install hexo-generator-search --save</code><br>在管理员模式下的命令行(cmd)输入以上内容下载插件</li><li>打开主题配置文件，ctrl+f 查找 local_search 将 enable 的 false 改成 true </li><li>打开配置文件(不是主题配置文件！)拖到最下面，插入以下行：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: <span class="number">1000</span></span><br></pre></td></tr></table></figure>注意search前面一定不要有空格！！否则会变成二级指令！！yml格式的文档按照缩进来分层次！！</li></ol>]]></content>
      
      
      <categories>
          
          <category> 《博客维护日志》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 维护博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day8</title>
      <link href="/2021/11/08/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day8/"/>
      <url>/2021/11/08/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day8"><a href="#Day8" class="headerlink" title="Day8"></a>Day8</h1><p>今天把之前一些比较简单的题做一下……发现我这做题有问题啊，每次都是因为一些奇怪的原因导致一直得不出答案……就比如忘了写输入、写输入的位置错了、没删干净……警示一下自己！</p><h2 id="1607B-Odd-Grasshopper"><a href="#1607B-Odd-Grasshopper" class="headerlink" title="1607B - Odd Grasshopper"></a><a href="https://codeforces.com/problemset/problem/1607/B">1607B - Odd Grasshopper</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>给一个起始位置，和移动步数，如果所在位置是奇数就跳到所在位置+i(i是现在移动的第几次)</p><p>如果是偶数就跳到所在位置-i</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>这是个循环节，每四个一循环，手写一下就能看出来了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">ll x,n,res=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;n;</span><br><span class="line"><span class="keyword">if</span>(x&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ll pos = n%<span class="number">4</span>;</span><br><span class="line">ll t = (n<span class="number">-1</span>) / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(pos == <span class="number">0</span>)</span><br><span class="line">res = x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">1</span>)</span><br><span class="line">res = x+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">2</span>)</span><br><span class="line">res = x<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">3</span>)</span><br><span class="line">res = x<span class="number">-4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(pos==<span class="number">1</span>)</span><br><span class="line">res += <span class="number">4</span>*t;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos==<span class="number">3</span>)</span><br><span class="line">res -= <span class="number">4</span>*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">ll pos = n%<span class="number">4</span>;</span><br><span class="line">ll t = (n<span class="number">-1</span>) / <span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(pos == <span class="number">0</span>)</span><br><span class="line">res = x;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">1</span>)</span><br><span class="line">res = x<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">2</span>)</span><br><span class="line">res = x+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">3</span>)</span><br><span class="line">res = x+<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(pos==<span class="number">1</span>)</span><br><span class="line">res -= <span class="number">4</span>*t;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos==<span class="number">3</span>)</span><br><span class="line">res += <span class="number">4</span>*t;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>循环节% 0的位置是没有移动。</p><h2 id="1607A-Linear-Keyboard"><a href="#1607A-Linear-Keyboard" class="headerlink" title="1607A - Linear Keyboard"></a><a href="https://codeforces.com/problemset/problem/1607/A">1607A - Linear Keyboard</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你26个位置存a到z，输出一个字符串，需要移动几步。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>mp存位置，起始位置是s[0]，然后从1开始遍历，每次更新位置pos即可。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line">map&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;s; </span><br><span class="line"><span class="keyword">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">mp[s[i]] = i;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line">len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">int</span> pos = mp[s[<span class="number">0</span>]];</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++) &#123;</span><br><span class="line">res += <span class="built_in">abs</span>(mp[s[i]] - pos);</span><br><span class="line">pos = mp[s[i]];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>就是mp的运用，应该五分钟内写完的。。</p><h2 id="1606A-AB-Balance"><a href="#1606A-AB-Balance" class="headerlink" title="1606A - AB Balance"></a><a href="https://codeforces.com/problemset/problem/1606/A">1606A - AB Balance</a></h2><h3 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h3><p>有一段ab串，修改串使ab的个数 = ba的个数，输出最少修改的串</p><h3 id="思路：-2"><a href="#思路：-2" class="headerlink" title="思路："></a>思路：</h3><p>如果ab = ba直接输出，否则把最后一个字母换成第一个字母再输出，写一写很容易找出规律</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">string s;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="keyword">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">int</span> ab=<span class="number">0</span>,ba=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)</span><br><span class="line"><span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]==<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">ab++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">&#x27;b&#x27;</span>&amp;&amp;s[i]==<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">ba++;</span><br><span class="line"><span class="keyword">if</span>(ab != ba)</span><br><span class="line">s[len<span class="number">-1</span>] = s[<span class="number">0</span>];</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>pass</p><h2 id="1604A-Era"><a href="#1604A-Era" class="headerlink" title="1604A - Era"></a><a href="https://codeforces.com/problemset/problem/1604/A">1604A - Era</a></h2><h3 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h3><p>给一个数组，可以添加任意k到数组任意位置，让每个位置的a[i] &lt;= i</p><p>问最少添加几个数</p><h3 id="思路：-3"><a href="#思路：-3" class="headerlink" title="思路："></a>思路：</h3><p>找到最大的数，让最大的数的位置 = 这个数</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">int</span> add = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line"><span class="keyword">if</span>(i + add &lt; a[i]) </span><br><span class="line">add = a[i] - i;</span><br><span class="line">cout&lt;&lt;add&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-3"><a href="#总结：-3" class="headerlink" title="总结："></a>总结：</h3><p>pass</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day7</title>
      <link href="/2021/11/05/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day7/"/>
      <url>/2021/11/05/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day7/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day7"><a href="#Day7" class="headerlink" title="Day7"></a>Day7</h1><h2 id="1594B-Special-Numbers"><a href="#1594B-Special-Numbers" class="headerlink" title="1594B - Special Numbers"></a><a href="https://codeforces.com/problemset/problem/1598/B">1594B - Special Numbers</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>试求：由k的任意次幂求和第k大的数，由于数很大需要取mod = 1e9+7</p><p>如：如果n是3，那么这个序列就是 1 (3^0^)，3(3^1^) ，4(3^1^+3^0^) ，9(3^2^) …… 第4大的就是9</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>其实可以看出来，这个从小到大的排序，其实可以看出来：k的二进制上是1的x位置就是有3的x次方。</p><p>如：k = 3 二进制 0 0 1 1 ，即 3^1^ + 3^0^ = 4 。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">ll n,k,res = <span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">while</span>(k) &#123; <span class="comment">//类似快速幂，取出k二进制是1的位置</span></span><br><span class="line"><span class="keyword">if</span>(k&amp;<span class="number">1</span>)<span class="comment">//如果第一位是1，那么加上n的x次方 = t</span></span><br><span class="line">res = (res + t) % mod;</span><br><span class="line">t = (t * n) % mod;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>幂排序的题也可以进一步转换为二进制来做，二进制牛的一，其实就是用二进制代替了某种序列: 0 0 0 1，0 0 1 0 ， 0 0 1 1 ， 0 1 0 0 ……这种方式的题目可以考虑用二进制来做。</p><h2 id="1594C-Make-Them-Equal"><a href="#1594C-Make-Them-Equal" class="headerlink" title="1594C - Make Them Equal"></a><a href="https://codeforces.com/problemset/problem/1598/C">1594C - Make Them Equal</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>长度是n的一个字符串，把所有的字符全都变成给定字符ch，可以选择一个数i，让除了i的倍数的数全都变成ch，输出最少选几次就可以全部变成ch，下一行输出选的数是哪几个(由小到大)</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>如果最初的字符串就全部为ch，直接输出0</p><p>如果2~n的某个数k的倍数全部为ch，输出1，输出 k (这样的话选定这个k，由于k的倍数都是ch不需要改变，其他所有的数都变成ch。实际上len/2以后的数只要有一个是ch，那么就可以完成操作)</p><p>如果不满足上面两种情况 ，输出2 ，输出 n-1, n (选n-1 ,除了n-1全都变成ch，选n，把剩下的n-1变成ch)</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> n,res,len;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">case1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) </span><br><span class="line"><span class="keyword">if</span>(s[i]!=c)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">case2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">bool</span> k = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j * i &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span>(s[j * i - <span class="number">1</span>] != c)</span><br><span class="line">k = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(k)</span><br><span class="line"><span class="keyword">return</span> res = i; <span class="comment">//把答案保存下来</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;c&gt;&gt;s;</span><br><span class="line">len = s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">case1</span>()) </span><br><span class="line">cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">case2</span>()) </span><br><span class="line">cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl&lt;&lt;res;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">cout&lt;&lt;<span class="number">2</span>&lt;&lt;endl&lt;&lt;n<span class="number">-1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n;</span><br><span class="line">       cout&lt;&lt;endl；</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>中途需要退出的循环感觉写成函数会比较好。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的私人书库——Cailbre !</title>
      <link href="/2021/11/04/%E3%80%8A%E8%BD%AF%E4%BB%B6%E3%80%81%E5%B7%A5%E5%85%B7%E3%80%8B/Cailbre%E6%8E%A8%E8%8D%90/"/>
      <url>/2021/11/04/%E3%80%8A%E8%BD%AF%E4%BB%B6%E3%80%81%E5%B7%A5%E5%85%B7%E3%80%8B/Cailbre%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p>最近双十一，总想着买一点东西，然后最终指向了Kindle(亚马逊电子阅读器)，记得高中时候有同学拿着玩过，感觉很神奇，确实也是，然后一看价格也算是可以接受所以就下单了。</p><p>Kindle的刷新率很低，换页基本上就和PPT一样，而且也是黑白界面的，体积小重量小，当然这些既是缺点也是优点。你说拿着手机看不就完了，但是拿着Kindle你除了看书就没有其他选择了，用手机的话可能会受到干扰，而且相比较于手机Kindle是很护眼的。所以说买Kindle的人都是想要看电子书才买的。</p><p>说了这么多就是引入这次要推荐的软件——Cailbre，一个可以在本地管理电子书的工具，也可以修改电子书格式，发送到我的Kindle设备。</p><p><img src="https://i.loli.net/2021/11/04/8S7M29EKnwOkemg.png" alt="Cailbre示意图.png"></p><p>下载地址：<a href="https://calibre-ebook.com/dist/win32">https://calibre-ebook.com/dist/win32</a></p><p>下载安装没什么好说的，就说一下如何把电子书传送到Kindle设备！</p><ol><li><p>点击右上角三个点，点击首选项，点击通过邮件分享。</p></li><li><p>把Kindle设备的邮箱地址添加到上面(可以在Kindle设备的个人信息中查看，或者登陆亚马逊网页，进入设备管理处查看/修改)</p></li><li><p><img src="https://i.loli.net/2021/11/04/pFaYGfjXweTOCMr.png" alt="邮箱示意.png"></p><p>建议使用163邮箱，然后按照这个设置，这里注意，密码不是登录密码！</p></li><li><p>既然不是登陆密码是什么？首先打开我的163邮箱，点击设置，点击<strong>POP3/SMTP/IMAP</strong>，开启IMAP/SMTP服务(开启另一个也可以)，新增一个授权密码，把密码复制到上面的框中。(没有用红色涂掉的部分全部抄上去就好了！涂掉的是你自己的163邮箱地址！)</p></li></ol><p>完成上面四步，你可以测试一下能否发送，如果点击测试后显示发送成功那么就可以了，但是这样每次你都会需要验证一次邮箱，才会发送到你的设备很麻烦，如何可以跳过验证呢？</p><ol><li>打开亚马逊官网<a href="https://www.amazon.cn/">https://www.amazon.cn/</a> ，登陆账户</li><li>把鼠标放在<strong>我的账户</strong>右边的小三角处，出来一个框选择管理我的内容和设备</li><li>选择首选项，拉到最下面，选择个人文档设置，这时候你可以看到你的设备。</li><li>如果你要修改邮箱，切记不可和发送邮件的163邮箱前缀相同(或完全相同)！！否则会导致无法发送</li><li>在已认可的发件人电子邮箱列表中加入你的163邮箱即可。</li></ol><p>完成以上步骤你就可以直接用Cailbre发送电子书到Kindle设备了！并且管理电子书也是很方便的。有什么其他功能可以再去网上搜一下。主要就是用这个功能。</p>]]></content>
      
      
      <categories>
          
          <category> 《实用软件/工具》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day6</title>
      <link href="/2021/11/04/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day6/"/>
      <url>/2021/11/04/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h1><h2 id="1607C-Minimum-Extraction"><a href="#1607C-Minimum-Extraction" class="headerlink" title="1607C - Minimum Extraction"></a><a href="https://codeforces.com/problemset/problem/1607/C">1607C - Minimum Extraction</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>给定一个数组，每次选择最小的数删除，其他的所有数减去这个数。</p><p>问删除的数最大值是多少。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>只需要排好序，默认最大值是a[1] 然后遍历一遍a[i]-a[i-1]的求最大值即可。</p><p>因为同时减去一个数等于都没减……因为： (a[3] - a[1]) - (a[2] - a[1]) = a[3] - a[2]</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line"><span class="keyword">int</span> res = a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">res = <span class="built_in">max</span>(res,a[i]-a[i<span class="number">-1</span>]);</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>同时减去(加上)一个数可以某种意义上认为都没有减(加)。</p><h2 id="1593D1-All-are-Same"><a href="#1593D1-All-are-Same" class="headerlink" title="1593D1 - All are Same"></a><a href="https://codeforces.com/problemset/problem/1593/D1">1593D1 - All are Same</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>找到一个数k，使数组内的数减去任意次k可以使整个数组相等。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>求所有s[i] - s[i-1]的gcd，最后的gcd大于等于1就输出，否则输出-1。</p><p>列个式子表示一下: </p><p>a - k x = b - k y  =》假设 a减去x个k  等于  b减去y个k</p><p>a - b = k (x - y) </p><p>(a - b) / k = x - y =》 从这个式子就可以看出很多东西。x和y一定是整数，k最大就是a-b，只要遍历一遍a-b，取最终的gcd就可以了。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line">ll a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">ll res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">res = __gcd(a[i]-a[i<span class="number">-1</span>],res);</span><br><span class="line"><span class="keyword">if</span>(res&gt;=<span class="number">1</span>)</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>列一个通式，然后化简得到数学式子，再由数学式推导题目的步骤。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day5</title>
      <link href="/2021/11/03/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day5/"/>
      <url>/2021/11/03/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day5/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h1><h2 id="1607D-Blue-Red-Permutation"><a href="#1607D-Blue-Red-Permutation" class="headerlink" title="1607D - Blue-Red Permutation"></a><a href="https://codeforces.com/problemset/problem/1607/D">1607D - Blue-Red Permutation</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>给定n个数，每个数可能是蓝色也可能是红色，如果是蓝色，那他可以进行-1操作，如果是红色，那他可以进行+1操作。</p><p>问能不能让数组1~n每个数都出现一次。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>排序，遍历两遍。</p><p>第一遍正向，遇到蓝色就放在最左边，计数器+1，如果这个数小于计数器那么这个数组就不能做到每个数出现一遍。</p><p>第二遍逆向，遇到红色就放在最右边，计数器-1，如果这个数大于计数器那么这个数组就不能做到每个数出现一遍。</p><p>假设比那里蓝色，如果这个数是2，前面已经有两个数了(计数器为3)，由于蓝色只能减不能加，所以这个数就不能起到作用，一共n个数如果少了一个数，那么就不可能同时存在 1~n了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> color;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.num &lt; y.num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i].num;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i].color;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp); <span class="comment">//排序</span></span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">bool</span> k = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//正序遍历蓝色</span></span><br><span class="line"><span class="keyword">if</span>(a[i].color==<span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].num &gt;= cnt)</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">cnt = n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)<span class="comment">//逆序遍历红色</span></span><br><span class="line"><span class="keyword">if</span>(a[i].color==<span class="string">&#x27;R&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].num &lt;= cnt)</span><br><span class="line">cnt--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(k)</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;NO&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;YES&quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>倒序思考一点问题都没有。</p><h2 id="1607E-Robot-on-the-Board-1"><a href="#1607E-Robot-on-the-Board-1" class="headerlink" title="1607E - Robot on the Board 1"></a><a href="https://codeforces.com/problemset/problem/1607/E">1607E - Robot on the Board 1</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给定一个n*m的盘，机器人会根据命令运行，问起点在哪里的时候，可以做的指令最多。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>从头遍历，记录最左端，最右端，最上端，最下端，如果右-左 超过了m或者下-上 超过了 n就退出。</p><p>1-w , 1-a就是所需要的</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">string ss;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">int</span> w,a,s,d,x,y;</span><br><span class="line">w = a = s = d = x = y = <span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;ss;</span><br><span class="line"><span class="keyword">int</span> len = ss.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(ss[i]==<span class="string">&#x27;U&#x27;</span>)x--;</span><br><span class="line"><span class="keyword">if</span>(ss[i]==<span class="string">&#x27;D&#x27;</span>)x++;</span><br><span class="line"><span class="keyword">if</span>(ss[i]==<span class="string">&#x27;L&#x27;</span>)y--;</span><br><span class="line"><span class="keyword">if</span>(ss[i]==<span class="string">&#x27;R&#x27;</span>)y++;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(<span class="built_in">min</span>(w,x)-<span class="built_in">max</span>(s,x)) &gt;= n || <span class="built_in">abs</span>(<span class="built_in">min</span>(a,y)-<span class="built_in">max</span>(d,y)) &gt;= m )</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">w=<span class="built_in">min</span>(w,x);a=<span class="built_in">min</span>(a,y);</span><br><span class="line">s=<span class="built_in">max</span>(s,x);d=<span class="built_in">max</span>(d,y);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="number">1</span>-w&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="number">1</span>-a&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>模拟一下想一下应该是不难解决。</p><p>其实还有另外一种做法</p><h3 id="代码2："><a href="#代码2：" class="headerlink" title="代码2："></a>代码2：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,m;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        string s;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">1</span>,y=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">//反向查找起始位置</span></span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;L&#x27;</span>&amp;&amp;x&lt;m)x++;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;R&#x27;</span>&amp;&amp;x&gt;<span class="number">1</span>)x--;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;U&#x27;</span>&amp;&amp;y&lt;n)y++;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;D&#x27;</span>&amp;&amp;y&gt;<span class="number">1</span>)y--;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;y&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>单独看左右，倒着找到起始位置，从起始位置可以走最远的路！</p><p>上下同样如此。</p><p>所以这样的题可以分治成左右和上下两部分来完成，左右能走最远的位置就是y坐标，上下能走最远的位置就是x坐标。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CP Editor写个CodeForce也变炫酷喽!</title>
      <link href="/2021/11/02/%E3%80%8A%E8%BD%AF%E4%BB%B6%E3%80%81%E5%B7%A5%E5%85%B7%E3%80%8B/CP%20Editor%E6%8E%A8%E8%8D%90/"/>
      <url>/2021/11/02/%E3%80%8A%E8%BD%AF%E4%BB%B6%E3%80%81%E5%B7%A5%E5%85%B7%E3%80%8B/CP%20Editor%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p>安装地址:<a href="https://cpeditor.org/download/">Download CP Editor | CP Editor</a></p><p>最近在CF做题，发现学姐交的一个题上有小广告^^，然后发现了这个宝藏IDE，确实在CF上做题用这个IDE很不错！！</p><p>在这里放一个B站UP主的完整配置过程：</p><p><a href="https://www.bilibili.com/video/BV1mX4y1V7S8">简单的 CP Editor 使用教程！_bilibili</a> ，UP主已经讲的很详细了，这个可能需要配置一下，不是下载以后直接用。</p><p>配合插件competitive companion食用更佳!!这个插件在CF页面点一下就可以把样例自动复制到CP Editor上面并且打开一个新的页并定位好题在CF上的位置。</p><p>讲一下完整过程：</p><ol><li>安装</li><li>需要再PATH里配置C++,MinGW,(我安装的里面没有带？)<a href="https://sourceforge.net/projects/mingw-w64/">MinGW-w64 - for 32 and 64 bit Windows download | SourceForge.net</a>，没有的话下载这个，然后放在CP Editor的目录里</li><li>在环境变量 PATH 里面加入 CP Editor目录里的 MinGW 里的 bin</li><li><a href="https://github.com/xalanq/cf-tool/releases/tag/v1.0.0">Release v1.0.0 Release! · xalanq/cf-tool · GitHub</a> ，这个是CF插件视频里会提到。</li><li><a href="https://chrome.google.com/webstore/detail/competitive-companion/cjnmckjndlpiamhfimnnjmnckgghkjbl/related?hl=zh-CN">Competitive Companion - Chrome 网上应用店 (google.com)</a> ，这个是网页插件，需要魔法，也可以在网上找一找。</li></ol><p>写CF用这个感觉针不戳！</p><p><img src="https://i.loli.net/2021/11/02/UYrbt4Qk9IoeCZ5.png" alt="CP Editor示意图.png"></p><p>当然也不尬吹，用这个debug感觉不太妙啊……</p>]]></content>
      
      
      <categories>
          
          <category> 《实用软件/工具》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写Markdown用Typora！</title>
      <link href="/2021/11/02/%E3%80%8A%E8%BD%AF%E4%BB%B6%E3%80%81%E5%B7%A5%E5%85%B7%E3%80%8B/Typora%E6%8E%A8%E8%8D%90/"/>
      <url>/2021/11/02/%E3%80%8A%E8%BD%AF%E4%BB%B6%E3%80%81%E5%B7%A5%E5%85%B7%E3%80%8B/Typora%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2021/11/02/HibmgOWQ7wCpBxz.png" alt="s"></p><p>安装地址:<a href="https://www.typora.io/#windows">Typora — a markdown editor, markdown reader.</a></p><p>Typora我觉得是一款不错的Markdown阅读器、编辑器(实际上我也只用这个嘿嘿)。</p><p>安装没啥难度，下载安装就好了，无需配置，进去就可以用了。</p><p>如果不会写Markdown，可以简单的学一下语法<br><a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程Markdown</a></p><p>用这个记笔记也是一个不错的选择！！</p><p><img src="https://i.loli.net/2021/11/02/HUPV4Keg9xhNwqD.png" alt="Typora示意图.png"></p>]]></content>
      
      
      <categories>
          
          <category> 《实用软件/工具》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day4</title>
      <link href="/2021/11/02/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day4/"/>
      <url>/2021/11/02/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day4/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h1><h2 id="1604B-XOR-Specia-LIS-t"><a href="#1604B-XOR-Specia-LIS-t" class="headerlink" title="1604B - XOR Specia-LIS-t"></a><a href="https://codeforces.com/problemset/problem/1604/B">1604B - XOR Specia-LIS-t</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>给定序列a，你可以把它分成若干份，对于每一份，定义h<del>k</del>的值为该部分序列的最长上升子序列的长度，求是否存在一种分割序列a的方法，使h<del>1</del>,h<del>2</del>,…,h<del>k</del> 的异或和为0</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>要想异或和为0，就需要二进制的每一位上的1都是偶数个。</p><p>进一步想：如果n是偶数，那么直接全部都为1，就可以得到偶数个1，异或和为0</p><p>如果n是奇数，那么只要存在一个a[i-1]&gt;=a[i]就可以把这两个合并为1，同样是偶数个1，异或和为0</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> k=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;=a[i<span class="number">-1</span>])</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(k)</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;YES&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;NO&quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>还是之前总结的，做位运算的题首先把数变成二进制来把握，找到规律以后再进一步思考</p><h2 id="1604C-Di-visible-Confusion"><a href="#1604C-Di-visible-Confusion" class="headerlink" title="1604C - Di-visible Confusion"></a><a href="https://codeforces.com/problemset/problem/1604/C">1604C - Di-visible Confusion</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>一个长为n的数组a<del>1</del>,a<del>2</del>,…,a<del>n</del> ，如果在1≤i≤|a|(a当前的长度)存在a<del>i</del>不能被i+1整除则可以删除a<del>i</del> ，剩下的数组变为a<del>1</del>,a<del>2</del>,a<del>n-1</del> 。求是否能使数组清空。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>把a<del>i</del> 可能在的位置都遍历一遍(1 ~ i)，如果某一位置可以移除那么他就可以消除，否则永远无法清除。</p><p>也就是遍历在 2到i+1的范围内有没有 a[i]的因子！</p><p>为什么可以呢？因为每次倒着删一个满足条件的，一直反复操作就会完全清空，由于每次都是从后往前操作不会影响到前面的数，总有一次会删除掉。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">bool</span> res = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">bool</span> k = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=i+<span class="number">1</span>;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] % j) &#123;</span><br><span class="line">k = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k == <span class="literal">false</span>) </span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">solve</span>())</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>会发生变化的数组，不妨从后往前想一想，不要总是从前往后思考。因为从后往前不会对前面的造成影响。</p><h2 id="1604D-Moderate-Modular-Mode"><a href="#1604D-Moderate-Modular-Mode" class="headerlink" title="1604D - Moderate Modular Mode"></a><a href="https://codeforces.com/problemset/problem/1604/D">1604D - Moderate Modular Mode</a></h2><h3 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h3><p>给定x,y求一个n可以使 n mod x = y mod n</p><h3 id="思路：-2"><a href="#思路：-2" class="headerlink" title="思路："></a>思路：</h3><p>n%x=y%n , 优先考虑结果为特殊值,如0和y.<br>n%x=y%n=0,当x=y时,n取x成立,即<br>n%x=y%n=y,当x&gt;y时,n取x+y成立.</p><p>接下来考虑x&lt;y的情况:<br>这题有两个结论:</p><ol><li>n不能&lt;x:<br>否则n%x=n,此时y%n=n不可能成立.</li><li>n不能&gt;y:<br>否则y%n=y,此时n%x=y,那么一定有x&gt;y,与当前条件冲突.<br>综上:n在x和y之间.</li></ol><p>画图:<br>0开始以步长x开始跳,但不跳过y,设最后的位置为p.<br>要使得n%x=y%n,取n为p和y的中点即可.</p><p><img src="https://i.loli.net/2021/11/02/BaPjpuGImQl36Fi.png" alt="CodeForce - Day4 - 1"></p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> _;cin&gt;&gt;_;</span><br><span class="line"><span class="keyword">while</span>(_--) &#123;</span><br><span class="line">ll x,y;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(x&gt;y)</span><br><span class="line">cout&lt;&lt;x+y;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;y-y%x/<span class="number">2</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>数论题，优先考虑特殊值，如本题的0和y，然后再找隐藏的式子成立的条件。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day3</title>
      <link href="/2021/11/01/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day3/"/>
      <url>/2021/11/01/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h1><h2 id="1606C-Banknotes"><a href="#1606C-Banknotes" class="headerlink" title="1606C - Banknotes"></a><a href="https://codeforces.com/problemset/problem/1606/C">1606C - Banknotes</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>有n种面值的钱,每种面值10^a[i]。找到最小的一个不能被k张任意面额的钱恰好支付的价格。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>在一种面额能被另一种面额替代之前如果数量不够，那么就是答案的数值(比如有1和100两种面额，但是k=98，那么99就是答案，因为98张面额为1的不能支付99，选择了100的更是没办法恰好支付！)</p><p>因此先把每种面额能转换的张数记录下来，看能不能填满，然后再把多余的放在最后就可以了。</p><p>不能是k张最小值+最小面额(例如:已经有9个1，+1就一定能进位，必然可以用小于k张来代替)，而是k+1张不断的填。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line">ll a[<span class="number">15</span>],b[<span class="number">15</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> t;</span><br><span class="line"> cin&gt;&gt;t;</span><br><span class="line"> <span class="keyword">while</span>(t--) &#123;</span><br><span class="line"> ll n,k,cnt=<span class="number">0</span>,x;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">a[i] = <span class="built_in">pow</span>(<span class="number">10</span>,x); <span class="comment">//求面额</span></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">b[++cnt] = (a[i]/a[i<span class="number">-1</span>])<span class="number">-1</span>; <span class="comment">//求差值</span></span><br><span class="line">&#125;</span><br><span class="line">k++; <span class="comment">//用k+1张来求</span></span><br><span class="line">ll res = <span class="number">0</span>;</span><br><span class="line">cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k&gt;=b[cnt] &amp;&amp; cnt&lt;n) &#123;</span><br><span class="line">k -= b[cnt];</span><br><span class="line">res += a[cnt] * b[cnt];</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line">res += a[cnt] * k;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>其实想一想也是用循环来做这样的题，考虑好关系就好了。</p><h2 id="1606B-Update-Files"><a href="#1606B-Update-Files" class="headerlink" title="1606B - Update Files"></a><a href="https://codeforces.com/problemset/problem/1606/B">1606B - Update Files</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>n台电脑，k条数据线，开始有一台电脑有信息，每台电脑可以通过一条数据线把信息传给另一台，问最少需要传多少次。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>首先在数据线足够的时候数量是2的？次幂台电脑上传输数据，数据线不够以后每次增加数据线条数的电脑。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> t;</span><br><span class="line"> cin&gt;&gt;t;</span><br><span class="line"> <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">ll n,k;</span><br><span class="line">ll tmp = <span class="number">1</span>;</span><br><span class="line">ll res = <span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">while</span>(tmp &lt; k)</span><br><span class="line">tmp *= <span class="number">2</span>,res++; <span class="comment">//数据线足够的时间需要传几次</span></span><br><span class="line">n -= tmp;</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">res += (n<span class="number">-1</span>)/k+<span class="number">1</span>;<span class="comment">//数据线不足时需要传几次</span></span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>考虑有几种状态，即数据线足够时和数据线不足时。根据每种状态来求解。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day2</title>
      <link href="/2021/10/28/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day2/"/>
      <url>/2021/10/28/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h1><h2 id="1602B-Divine-Array"><a href="#1602B-Divine-Array" class="headerlink" title="1602B - Divine Array"></a><a href="https://codeforces.com/contest/1602/problem/B">1602B - Divine Array</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>数组进行k次操作，询问第x个位置上的数是多少。</p><p>每次操作重置数组，新的a[i]等于a[i]在该数组中出现的次数</p><p>如: 2 1 1 4 3 1 2 ==&gt; 2 3 3 1 1 3 2 ==&gt; ……</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>可以发现数组其实是逐渐趋于统一的，相同的数一直都是相同的，不相同的数可能会变为相同的，当所有的数字都等于该数字出现的次数时，之后不再改变。</p><p>这样的话，最多操作n次(不是一个精确的值，实际上应该少于n)就会让他不再改变，对最多2000个数操作2000次，1e6时间复杂度是过得去的。</p><p>但是询问次数q = 1e5，如果每次询问都重新跑一遍，大概率要超时！所以就做一个预处理，询问时直接输出。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2005</span>][<span class="number">2005</span>]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,q,x,k,real;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[<span class="number">0</span>][i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> w[<span class="number">2005</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) </span><br><span class="line">w[a[i<span class="number">-1</span>][j]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">a[i][j]=w[a[i<span class="number">-1</span>][j]];</span><br><span class="line">&#125;</span><br><span class="line">cin&gt;&gt;q;</span><br><span class="line"><span class="keyword">while</span>(q--) &#123;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;k;</span><br><span class="line">cout&lt;&lt;a[<span class="built_in">min</span>(k,n)][x]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>有询问的题目要考虑询问时会不会超时，如果超时可能要考虑做一个预处理，操作完询问的题大概率要做预处理把。</p><h2 id="1601A-Array-Elimination"><a href="#1601A-Array-Elimination" class="headerlink" title="1601A - Array Elimination"></a><a href="https://codeforces.com/problemset/problem/1601/A">1601A - Array Elimination</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>选择一个k，每次选择k个数，得到一个x = ai1 &amp; ai2 &amp; … &amp; aik ，然后使所选的数都减去x，如果最后能使每一个数都等于0，就输出这个k，问满足条件的数都有哪些</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>(因为&amp;操作后只剩下这k个数在二进制下都为1的位置，所以相当于把他们同为1的地方给删掉，也就是二进制的该位置上每次可以减去k个数，因此二进制下k必须是该位置的因子才可以完全去掉)</p><p>枚举二进制前30位(int范围内)，记录该位置上有多少个1，如果没有1，那么任何数都不会对他产生影响，所有的计数器都+1；如果有1，那么把他的因子都+1。</p><p>结束之后如果某个数字的计数器==31 (任何数%1 == 0，所以a[1]实际上就是31)，即他是每一个数的因子，那么他就可以做到把所有位置都变成0，因此输出这个数。</p><p>例如： 4 4 4 4 =&gt;二进制 0100 0100 0100 0100 =&gt; 0 4 0 0 ,如果选一个数那么每次可以去掉0 1 0 0，选两个数每次可以去掉0 2 0 0，选三个数每次可以去掉0 3 0 0，选四个数每次可以去掉0 4 0 0，显然只有1 2 4满足题目要求。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],cnt[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i],cnt[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;i)&amp;a[j])</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">cnt[j]++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=t;j++)</span><br><span class="line"><span class="keyword">if</span>(t%j==<span class="number">0</span>)</span><br><span class="line">cnt[j]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(cnt[i] == cnt[<span class="number">1</span>])</span><br><span class="line">cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p><strong>位运算的题最好是按照二进制的思想来解决</strong>，把每一个数都看作是二进制，这样比直接看作十进制简单不少！</p><h2 id="1598B-Groups"><a href="#1598B-Groups" class="headerlink" title="1598B - Groups"></a><a href="https://codeforces.com/problemset/problem/1598/B">1598B - Groups</a></h2><h3 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h3><p>有n个人，把n个人分成2组，要求每组在周一到周五任意一天全都有空(全是1)，并且2组所选的日期不同。</p><h3 id="思路：-2"><a href="#思路：-2" class="headerlink" title="思路："></a>思路：</h3><p>假设一组是某一天A，然后另一组是另一天B。如果选定的一天A有空的不足一半，直接pass掉，如果超过了，那么就记录第A天和第B天都有空 以及 第A天没空第B天有空的。可以知道，最多有A有空的人-人数的一半或者是两天都有空的人(其中较小的一个)，这些人就是可以为B提供贡献的，如果这个值 加上 第A天没空第B天有空的大于人数的一半，那么这存在，如果没有出现这样的情况，就是不存在。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1005</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> q[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">5</span>;j++) &#123;</span><br><span class="line">cin&gt;&gt;a[i][j];</span><br><span class="line"><span class="keyword">if</span>(a[i][j])</span><br><span class="line">q[j]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>&amp;&amp;f;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(q[i]&lt;n/<span class="number">2</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> last = q[i] - n/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=<span class="number">5</span>&amp;&amp;f;j++) &#123;</span><br><span class="line"><span class="keyword">int</span> same=<span class="number">0</span>,diff=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n&amp;&amp;f;k++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[k][i] &amp;&amp; a[k][j])</span><br><span class="line">same++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!a[k][i] &amp;&amp; a[k][j])</span><br><span class="line">diff++;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="built_in">min</span>(same,last);</span><br><span class="line"><span class="keyword">if</span>(tmp + diff &gt;= n/<span class="number">2</span>) </span><br><span class="line">f = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f)</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>这也算半个数学题了吧，一定要动笔比划一下，不然真的好绕啊，想明白数值的关系其实就是一个暴力枚举。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce - Day1</title>
      <link href="/2021/10/28/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day1/"/>
      <url>/2021/10/28/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%20-%20Day1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://wtcsky.github.io/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/">CodeForce刷题表</a></p><h1 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h1><h2 id="1598C-Delete-Two-Elements"><a href="#1598C-Delete-Two-Elements" class="headerlink" title="1598C - Delete Two Elements"></a><a href="https://codeforces.com/problemset/problem/1598/C">1598C - Delete Two Elements</a></h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h3><p>从n个数中删除2个数，使剩下数的平均值不变。</p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>删掉两个数平均值不变，所以这两个数的平均值等于n个数的平均值。</p><p>一开始想要直接for其中一个数，看看map里有没有另一个数，但是n个数的平均数×一个数可能会存在误差，导致不准确，不能准确定位。(好像不是x.5或者不是x.0就一定不存在应该也可以从这里下手解决)</p><p>既然不能用小数来解决，就转换思路：假设n个数和为sum，其中一个数是a，另一个数是b，如果满足条件( a + b ) / 2 = sum / n，那么就有 ( a + b ) * n = sum * 2 ，因此，只需要遍历一个a，另一个b通过 b * n = 2 * sum - a * n来获得即可。 </p><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[N]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--) &#123;</span><br><span class="line">map&lt;ll,<span class="keyword">int</span>&gt; mp;</span><br><span class="line">ll n,sum=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">sum+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">ll tmp = <span class="number">2</span> * sum - n * a[i];</span><br><span class="line">res+=mp[n*a[i]];</span><br><span class="line">mp[tmp]++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>分数的问题可以尝试变成整数的问题，<strong>等式的问题可以通过转换来变成更容易解决的问题</strong>，尤其为了缩减时间复杂度枚举一个数来求另一个数。</p><h2 id="492B-Vanya-and-Lanterns"><a href="#492B-Vanya-and-Lanterns" class="headerlink" title="492B - Vanya and Lanterns"></a><a href="https://codeforces.com/problemset/problem/492/B">492B - Vanya and Lanterns</a></h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>在n个位置有路灯，需要照亮l长的路，最小灯照亮的半径。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>遍历两个路灯间的距离，把路灯间距离除以2，取最大的一个(因为要满足所有的数)，特别注意0和l的位置，特判一下即可。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1E6</span>+<span class="number">5</span>; </span><br><span class="line"><span class="keyword">double</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,l;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;l;</span><br><span class="line"><span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">res = <span class="built_in">max</span>(res,(a[i+<span class="number">1</span>]-a[i])/<span class="number">2</span>);</span><br><span class="line">res = <span class="built_in">max</span>(res,a[<span class="number">1</span>]);</span><br><span class="line">res = <span class="built_in">max</span>(res,l-a[n]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.9f&quot;</span>,res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><p>特别注意边界的判断。</p><h2 id="466A-Cheap-Travel"><a href="#466A-Cheap-Travel" class="headerlink" title="466A - Cheap Travel"></a><a href="https://codeforces.com/problemset/problem/466/A">466A - Cheap Travel</a></h2><h3 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h3><p>共要坐n次车，坐一次需要a元，买一次票可以坐m次，一张票b元，最少需要多少钱。</p><h3 id="思路：-2"><a href="#思路：-2" class="headerlink" title="思路："></a>思路：</h3><p>需要考虑走m时买票还是单次便宜，以及少于m时买票还是单次便宜。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1E6</span>+<span class="number">5</span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,a,b;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="built_in">min</span>(b,(n%m)*a);</span><br><span class="line">cout&lt;&lt;<span class="built_in">min</span>((n/m)*b+tmp,n*a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h3><p>考虑问题要全面，有‘/’和’%’两种情况的时候仔细看一点。</p>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建日志-2</title>
      <link href="/2021/10/27/%E3%80%8A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97-2/"/>
      <url>/2021/10/27/%E3%80%8A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97-2/</url>
      
        <content type="html"><![CDATA[<p>时隔一天我开始写这一篇！这一篇主要就是讲一下如何美化博客和简单地维护博客。直接进入主题，我们的美化说白了就是下载别人做好的预设主题，然后我们通过修改参数来让这个博客有你的影子，变成自己喜欢的样子。我的这个博客用的主题是:Butterfly，在GitHub上就可以搜到，我在这里直接放上我使用的主题地址，以及如何使用的说明。</p><hr><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly主题Github地址</a> 这是主题在GitHub上的位置</li><li><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安裝文檔快速開始 | Butterfly</a> 这是主题官方的全套说明</li><li><a href="https://space.bilibili.com/13282871/video">卷二兔的个人空间_bilibili</a> 这是一位UP主带你一起修改</li></ul><hr><h1 id="简述如何安装Butterfly"><a href="#简述如何安装Butterfly" class="headerlink" title="简述如何安装Butterfly"></a>简述如何安装Butterfly</h1><p>因为配置的过程就是对照官方说明修改，所以我这里只说一下怎么安装吧，因为安装可能会出现点小问题！</p><ul><li>安装我们可以直接选择npm安装，打开你<strong>博客(上一篇博客提到的)所在的文件夹</strong>，右键Git Bash Here(注意一定要开管理员权限！)，输入<code>npm i hexo-theme-butterfly</code></li><li>打开<strong>博客所在的文件夹</strong>，打开里面的_config.yml，翻到最后，把<code>theme: landscape</code>改成<code>theme: butterfly</code></li><li>在<strong>博客所在的文件夹</strong>，右键Git Bash Here，输入<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code></li><li>把在<code>node_modules/hexo-theme-butterfly</code>路径里的<code>_config.yml</code>改名为<code>_config.butterfly.yml</code>然后复制到最开始的位置。</li></ul><p>以上就是安装的过程，在文档里也有，我只是再复述一遍，里面的hexo根目录指的是博客所在的文件夹。</p><hr><h1 id="简单地维护"><a href="#简单地维护" class="headerlink" title="简单地维护"></a>简单地维护</h1><p>依照文件配置完之后，就要开始写文章了，写文章也是要用Markdown(一种标记语言)，这里建议用Typora来写Markdown文章。</p><p>每一篇博客开头都是有固定格式的<a href="https://butterfly.js.org/posts/dc584b87/#Front-matter">Butterfly 安裝文檔(二) 主題頁面 | Butterfly</a>，具体看这里。</p><p>★添加标签、分类也是直接在格式上标记，上传的时候会自动帮你分类，网页上就会自动更新新的标签和分类。</p><p>写完文章以后，存放到<code>博客文件/source/_posts</code>路径里面，里面可以任意添加文件夹自己分类。</p><p>之后回到博客文件，右键Git Bash Here，输入指令。</p><p>关于指令<a href="https://www.jianshu.com/p/7b8faf77d1af">Hexo常用命令: - 简书)</a></p><p>我觉得常用的就是</p><p>hexo clean -&gt; hexo g -&gt; hexo d</p><p>这三个按顺序输入一遍就可以上传到你的网站，不过GitHub可能连不上出现错误。</p><p>hexo s 可以在本地运行你的网站(没有上传)。</p><hr><p>以上差不多就是美化和维护的措施了，当然我基本上没有说什么东西，因为有较我来说更为详细的，而我的文章大概率是不会有人来看的，之所以还要继续写下去，是为我自己看的(。-ω-)zzz。</p>]]></content>
      
      
      <categories>
          
          <category> 《博客搭建日志》 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客维护日志-1</title>
      <link href="/2021/10/27/%E3%80%8A%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97-1/"/>
      <url>/2021/10/27/%E3%80%8A%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97-1/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>发现文章下面该文章链接是一个错误的位置并且还有乱码！</p><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><p>乱码是因为没有打开解码功能，导致路径中的中文显示为乱码，只需要把<code>_config.butterfly.yml</code>中<code>post_copyright</code>下的<code>decode: false</code>改为<code>decode: true</code> 即可。</p><p>而链接错误是因为我没有设置，只需要把<code>_config.yml</code>中最开始的<code>url: https://example.com</code>网址改成自己的网址即可。</p>]]></content>
      
      
      <categories>
          
          <category> 《博客维护日志》 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 维护博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客维护总览</title>
      <link href="/2021/10/27/%E3%80%8A%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97-%E6%80%BB%E8%A1%A8/"/>
      <url>/2021/10/27/%E3%80%8A%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%97%A5%E5%BF%97-%E6%80%BB%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="博客维护总览"><a href="#博客维护总览" class="headerlink" title="博客维护总览"></a>博客维护总览</h1><ul><li><input checked="" disabled="" type="checkbox"> 2021/10/27 修复了文章下面该文章链接显示错误的问题</li><li><input checked="" disabled="" type="checkbox"> 2021/11/8   添加了站内搜索功能</li></ul>]]></content>
      
      
      <categories>
          
          <category> 《博客维护日志》 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CodeForce刷题表</title>
      <link href="/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/"/>
      <url>/2021/10/27/%E3%80%8ACodeForce%E5%88%B7%E9%A2%98%E5%BD%95%E3%80%8B/CodeForce%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CodeForce刷题表"><a href="#CodeForce刷题表" class="headerlink" title="CodeForce刷题表"></a>CodeForce刷题表</h1><table><thead><tr><th align="center">编号</th><th align="center">题目名称</th><th align="center">Date</th><th align="center">Day</th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><a href="https://codeforces.com/problemset/problem/1598/C">1598C - Delete Two Elements</a></td><td align="center">2021/10/27</td><td align="center">1</td></tr><tr><td align="center">2</td><td align="center"><a href="https://codeforces.com/problemset/problem/492/B">492B - Vanya and Lanterns</a></td><td align="center">2021/10/27</td><td align="center">1</td></tr><tr><td align="center">3</td><td align="center"><a href="https://codeforces.com/problemset/problem/466/A">466A - Cheap Travel</a></td><td align="center">2021/10/27</td><td align="center">1</td></tr><tr><td align="center">4</td><td align="center"><a href="https://codeforces.com/contest/1602/problem/B">1602B - Divine Array</a></td><td align="center">2021/10/28</td><td align="center">2</td></tr><tr><td align="center">5</td><td align="center"><a href="https://codeforces.com/problemset/problem/1601/A">1601A - Array Elimination</a></td><td align="center">2021/10/28</td><td align="center">2</td></tr><tr><td align="center">6</td><td align="center"><a href="https://codeforces.com/problemset/problem/1598/B">1598B - Groups</a></td><td align="center">2021/10/28</td><td align="center">2</td></tr><tr><td align="center">7</td><td align="center"><a href="https://codeforces.com/problemset/problem/1606/C">1606C - Banknotes</a></td><td align="center">2021/11/1</td><td align="center">3</td></tr><tr><td align="center">8</td><td align="center"><a href="https://codeforces.com/problemset/problem/1606/B">1606B - Update Files</a></td><td align="center">2021/11/1</td><td align="center">3</td></tr><tr><td align="center">9</td><td align="center"><a href="https://codeforces.com/problemset/problem/1604/B">1604B - XOR Specia-LIS-t</a></td><td align="center">2021/11/2</td><td align="center">4</td></tr><tr><td align="center">10</td><td align="center"><a href="https://codeforces.com/problemset/problem/1604/C">1604C - Di-visible Confusion</a></td><td align="center">2021/11/2</td><td align="center">4</td></tr><tr><td align="center">11</td><td align="center"><a href="https://codeforces.com/problemset/problem/1604/D">1604D - Moderate Modular Mode</a></td><td align="center">2021/11/2</td><td align="center">4</td></tr><tr><td align="center">12</td><td align="center"><a href="https://codeforces.com/problemset/problem/1607/D">1607D - Blue-Red Permutation</a></td><td align="center">2021/11/3</td><td align="center">5</td></tr><tr><td align="center">13</td><td align="center"><a href="https://codeforces.com/problemset/problem/1607/E">1607E - Robot on the Board 1</a></td><td align="center">2021/11/3</td><td align="center">5</td></tr><tr><td align="center">14</td><td align="center"><a href="https://codeforces.com/problemset/problem/1607/C">1607C - Minimum Extraction</a></td><td align="center">2021/11/4</td><td align="center">6</td></tr><tr><td align="center">15</td><td align="center"><a href="https://codeforces.com/problemset/problem/1593/D1">1593D1 - All are Same</a></td><td align="center">2021/11/4</td><td align="center">6</td></tr><tr><td align="center">16</td><td align="center"><a href="https://codeforces.com/problemset/problem/1598/B">1594B - Special Numbers</a></td><td align="center">2021/11/5</td><td align="center">7</td></tr><tr><td align="center">17</td><td align="center"><a href="https://codeforces.com/problemset/problem/1598/C">1594C - Make Them Equal</a></td><td align="center">2021/11/5</td><td align="center">7</td></tr><tr><td align="center">18</td><td align="center"><a href="https://codeforces.com/problemset/problem/1607/B">1607B - Odd Grasshopper</a></td><td align="center">2021/11/8</td><td align="center">8</td></tr><tr><td align="center">19</td><td align="center"><a href="https://codeforces.com/problemset/problem/1607/A">1607A - Linear Keyboard</a></td><td align="center">2021/11/8</td><td align="center">8</td></tr><tr><td align="center">20</td><td align="center"><a href="https://codeforces.com/problemset/problem/1606/A">1606A - AB Balance</a></td><td align="center">2021/11/8</td><td align="center">8</td></tr><tr><td align="center">21</td><td align="center"><a href="https://codeforces.com/problemset/problem/1604/A">1604A - Era</a></td><td align="center">2021/11/8</td><td align="center">8</td></tr><tr><td align="center">22</td><td align="center"><a href="https://codeforces.com/problemset/problem/1594/D">1594D - The Number of Imposters</a></td><td align="center">2021//11/10</td><td align="center">9</td></tr><tr><td align="center">23</td><td align="center"><a href="https://codeforces.com/problemset/problem/1605/A">1605A - A.M. Deviation</a></td><td align="center">2021/11/15</td><td align="center">10</td></tr><tr><td align="center">24</td><td align="center"><a href="https://codeforces.com/problemset/problem/1605/B">1605B - Reverse Sort</a></td><td align="center">2021/11/15</td><td align="center">10</td></tr><tr><td align="center">25</td><td align="center"><a href="https://codeforces.com/problemset/problem/1605/C">1605C - Dominant Character</a></td><td align="center">2021/11/16</td><td align="center">11</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 《CodeForce刷题录》 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建日志-1</title>
      <link href="/2021/10/25/%E3%80%8A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97-1/"/>
      <url>/2021/10/25/%E3%80%8A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97-1/</url>
      
        <content type="html"><![CDATA[<p>今天是10月25号，距离我起手搭建博客(其实就是套板子呼呼(。-ω-)zzz)已经过去七八天了，前两天就想开始写这一篇博客，但是嘛，前两天是周六周天，大家都懂的……<del>周六周天应该休息休息哈</del>。</p><p>我个人认为搭建博客的基本流程就是 ：配置环境-&gt;搭建仓库-&gt;搭建框架-&gt;美化博客，可能下面有视频或文章和我的步骤顺序不太一样，但是无伤大雅。下面也会按照这个顺序捋一遍，当然我只是捋一遍，提到的步骤可能相对来说就比较少，因为我放的链接上有比较于我更加详尽、专业的操作，我只是作一个简单的复述可能会额外填上自己的几句话来让这个过程更加简单！</p><h1 id="我是如何搭建博客的？"><a href="#我是如何搭建博客的？" class="headerlink" title="我是如何搭建博客的？"></a>我是如何搭建博客的？</h1><p>很明显啊，我也是一点都不懂的，完全是0基础，我前端课学到的尽数交还给老师了，但是吧这并不影响我搭建一个博客。在开始我的陈述之前，先在下面放上在我搭建博客的路程上给予了我帮助的一些视频和文章。</p><hr><h2 id="推荐的视频、文章"><a href="#推荐的视频、文章" class="headerlink" title="推荐的视频、文章"></a>推荐的视频、文章</h2><ol><li><p><a href="https://www.bilibili.com/video/BV1mU4y1j72n?from=search&seid=7301864811981796136&spm_id_from=333.337.0.0">【2021最新版】保姆级Hexo+github搭建个人博客-bilibili</a></p></li><li><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029"> hexo史上最全搭建教程_Fangzh的技术博客-CSDN博客</a></p></li><li><p><a href="https://www.simon96.online/2018/11/10/hexo-env/">Hexo之搭建环境 | 遇见西门</a></p></li><li><p><a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">Node.js安装及环境配置之Windows篇 - 刘奇云 - 博客园</a></p></li><li><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Windows系统Git安装教程（详解Git安装过程） - 学为所用 - 博客园</a></p><p>……</p></li></ol><p>当然网上还有很多优质的视频和文章来帮助你配置环境、搭建框架，我只是放上了几个我自己看到过的并且感觉对我比较有用的。这可能就是互联网的伟大之处吧，有很多人会来分享自己的知识，当你再做一件事情的时候，你发现曾经某个人也和你遇到了相同的问题，你就会觉得自己并不孤单，有很多和你一样的人在做这件事情。同样，把你的知识的枝叶伸展出去，给更多后来人带来便利，也会感到很有成就感。</p><hr><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><ul><li>Node.js下载</li><li>Git下载</li></ul><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><ol><li><a href="https://nodejs.org/en/download/">Download | Node.js (nodejs.org)</a>进入官网下载直接点Windows Installer</li><li>找到下载位置(默认下载到<code> C:\Users\用户名\Downloads</code>)，下载的过程就是<strong>一直点下一步</strong>(可以直接安装到默认位置，改位置也可以照着教程来，如果没有特殊需求推荐直接安装默认C盘)</li><li>如果你没有改安装位置就忽略掉这一步，如果你没有安装在C盘那么打开<a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">Node.js安装及环境配置之Windows篇 - 刘奇云 - 博客园</a>，然后翻到第五步</li><li>最后Win+R(Win键就是windows键，在键盘左下角Alt左边那一个)打开运行，然后输入<code>cmd</code>，打开终端输入 <code>node -v</code>，如果显示一串版本数字而不是错误，再输入<code> npm -v</code>同样如此那么恭喜你完成了Node.js的安装</li></ol><p>Node.js是运行在服务端的 JavaScript。</p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><ol><li><a href="https://git-scm.com/download/win">Git - Downloading Package (git-scm.com)</a>进入官网下载，直接点 64-bit Git for Windows Setup(由于是国外的网站所以可能会下的很慢)</li><li>没特殊要求就一路下一步，安装地址也随便，不想思考就默认地址，具体<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Windows系统Git安装教程（详解Git安装过程） - 学为所用 - 博客园</a></li><li>最后Win+R打开运行，然后输入<code>cmd</code>，打开终端输入<code> git --version</code>，如果显示一串版本数字而不是错误，完成。</li></ol><p>这个就是用来把你的文件部署到Github上的命令窗口，对Github的操作要在这上面运行，可以直接通过文件打开，也可以鼠标右键显示的Git Bash here打开。</p><hr><h2 id="搭建仓库"><a href="#搭建仓库" class="headerlink" title="搭建仓库"></a>搭建仓库</h2><p>把你的数据存到Github的库中。</p><p>详细内容：<a href="https://www.bilibili.com/video/BV1mU4y1j72n?p=2">【2021最新版】保姆级Hexo+github搭建个人博客_哔哩哔哩_bilibili</a></p><h3 id="Github库"><a href="#Github库" class="headerlink" title="Github库"></a>Github库</h3><ol><li>注册Github账号–<a href="https://www.bilibili.com/read/cv5107169">Github注册+登录方法 - 哔哩哔哩 (bilibili.com)</a>，然后你就有一个Github账号了(因为是国外网站，可能会登陆不上)</li><li>点右上角头像 -&gt; 点击Your repository -&gt; 点击绿色的New -&gt; Repository name 下面输入<code>用户名.github.io</code>(用户名就是Owner下面那个注册的名字，如果后续不架域名，这个地址就是你的访问地址所以<strong>取一个好一点的用户名</strong>！！！)</li></ol><h3 id="关联Github"><a href="#关联Github" class="headerlink" title="关联Github"></a>关联Github</h3><ol><li>打开任意文件夹，在<strong>文件夹内</strong>空白处右键 -&gt; 点击Git Bash here -&gt; 输入<code> ssh-keygen -t rsa -C &quot;邮件地址&quot;</code> (把双引号里面的邮箱地址四个字换成你<strong>注册Github时用的邮箱</strong>) -&gt; 敲四次回车</li><li>打开<code>C:\Users\用户名\.ssh</code> -&gt; 用记事本打开<strong>id_rsa.pub</strong> -&gt; Ctrl + A(全选) -&gt; Ctrl + C(复制)</li><li>打开Github -&gt; 右上角头像 -&gt; 点击Setting -&gt; 点击SSH and GPG keys -&gt; 点击绿色的New SSH key -&gt; 在Title下随便写(选择困难症就直接写博客 -&gt; 在Key下Ctrl + V(粘贴) -&gt; 点击绿色的Add SSH Key</li><li>回到Git -&gt; 输入<code>ssh -T git@github.com </code>回车 -&gt; 输入 <code>yes</code>回车 -&gt; 出现……successfully……即为成功</li></ol><hr><h2 id="搭建框架"><a href="#搭建框架" class="headerlink" title="搭建框架"></a>搭建框架</h2><p>这里我用的是Hexo所以我也只演示Hexo，有其他框架有兴趣的可以去网上搜一下。</p><p><strong>★一定要用管理员权限来打开终端和Git！否则下载Hexo会Err失败!</strong>(详细见“常见问题”)</p><h3 id="Hexo下载"><a href="#Hexo下载" class="headerlink" title="Hexo下载"></a>Hexo下载</h3><ol><li><p>Win+R打开运行，然后输入<code>cmd</code>，打开终端输入<code>npm install hexo-cli -g </code>(复制上就行)，</p></li><li><p>输入<code>hexo -v</code>，如果显示一串版本数字而不是错误</p></li></ol><p>★如果没有改Node.js的安装位置，安装的模块安装到<code>C:\Users\用户名\AppData\Roaming\npm</code>路径中(需要打开显示隐藏，AppData这个文件夹可能是隐藏的)。显示隐藏文件夹的步骤：打开我的电脑-&gt;点击上面的查看-&gt;在<strong>隐藏的项目</strong>上打钩</p><h3 id="存放博客的文件夹-Hexo安装"><a href="#存放博客的文件夹-Hexo安装" class="headerlink" title="存放博客的文件夹(Hexo安装)"></a>存放博客的文件夹(Hexo安装)</h3><ol><li><p>打开你想存放的位置(可以是C盘，也可以是其他的盘)</p></li><li><p>右键文件夹空白处点击Git Bash here(一定要保证是你想存放的地方！)</p></li><li><p>输入<code>hexo init myblog</code>(这里的myblog可以替换成你想要的名字，后面的myblog也相应改变)</p></li><li><p>输入 <code>cd myblog</code> -&gt; 输入 <code>npm install</code> </p></li><li><p>打开文件夹myblog -&gt; 然后用记事本打开_config.yml -&gt; 拖到最后(替换deploy)</p><p>  deploy:<br>  type: git<br>  repository: 你的Github库的地址(Github右上角头像-&gt;点击Your repositories-&gt;点击xxx.github.io-&gt;点击绿色Code-&gt;复制网址)<br>  branch: main</p></li></ol><h3 id="文件夹与Github库关联"><a href="#文件夹与Github库关联" class="headerlink" title="文件夹与Github库关联"></a>文件夹与Github库关联</h3><ol><li>Git里面输入<code>npm install hexo-deployer-git --save</code></li><li>输入<code>hexo g</code></li><li>输入<code>hexo d</code> (此时会进行Github用户名验证和输入令牌，建议操作时一直开着Github)</li><li>当需要你输入令牌时，打开Github-&gt;点击右上角头像-&gt;点击setting-&gt;点击Developer setting-&gt;点击Personal access tokens-&gt;点击Generate new token</li><li>Note名字随便取，下面的Select scopes全选然后点击Generate token生成令牌，复制到第三步弹出来的令牌框。</li></ol><p><strong>★第3步可能会因为连接不上Github而失败(fatal:unable to access……)</strong></p><hr><p>完成上面的操作你就可以通过<strong>用户名.github.io</strong>来访问自己的页面了！！</p><hr><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="配置环境-1"><a href="#配置环境-1" class="headerlink" title="配置环境"></a>配置环境</h2><ul><li>可能比较因为是外国的网站所以会下载比较慢，会使用魔法应该可以提速。</li></ul><h2 id="搭建仓库-1"><a href="#搭建仓库-1" class="headerlink" title="搭建仓库"></a>搭建仓库</h2><ul><li>这一步应该是最简单的了，除了可能连不上Github……</li></ul><h2 id="搭建框架-1"><a href="#搭建框架-1" class="headerlink" title="搭建框架"></a>搭建框架</h2><ul><li>一定要用管理员权限来打开终端和Git！否则下载Hexo会Err失败<a href="https://gxhxl.blog.csdn.net/article/details/109026374"> Error: EPERM: operation not permitted（操作权限问题）_司夏的博客-CSDN博客</a> ，可以用Win+X然后选择Windows终端(管理员)打开或者用Windows自带的搜索去搜cmd然后管理员权限启动。也可以和Git一样，找到快捷方式-&gt;右键属性-&gt;点击兼容性-&gt;点击以管理员身份运行此程序-&gt;确定。</li><li>fatal:unable to access……，很多步骤都会出现这一句话，不要担心，这只是Github连不上了而已，和你没有关系。</li><li>yml文件格式里的东西严格保持语法，’:’必须是英文状态下的，并且后面需要加一个空格，而且这种语言是靠缩进来辨别语句等级的。</li></ul><p>如果有什么问题可以联系我，我也会再添加到上面……感觉最多就是这些问题了。</p><p>那么我们刚搭建好的博客打开一看全是Hexo，如何让他变得牛起来，下一篇日志我就会对于博客的美化与维护做一些叙述以及教学。</p>]]></content>
      
      
      <categories>
          
          <category> 《博客搭建日志》 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建日志-前言</title>
      <link href="/2021/10/24/%E3%80%8A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97-%E5%89%8D%E8%A8%80/"/>
      <url>/2021/10/24/%E3%80%8A%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E3%80%8B/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97-%E5%89%8D%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>这是这个博客基本搭建完成后我发布的第一篇博客，主要是来说一下我为什么会搭建这个博客，中间的心路，以及之后的一些事情。</p><p>18号的时候突发奇想，想要做一个自己的博客。最开始以为搭建博客一定要有服务器，但是后来查资料的时候发现如果搭建一个静态的博客，就不需要自己租赁服务器了。所以就着手搭建一个Hexo+ Github的静态博客。</p><p>中途也有想一个问题：“我到底要搭建一个什么样的博客？” 啊，因为实际上租一年腾讯云的小服务器也需要100左右(学生价)，也是可以接受的，所以我又到处查资料，在一个UP主那里看到了一个视频——<a href="https://www.bilibili.com/video/BV1cv411N7kz?p=2">搭博客到底选什么框架？</a>，然后知道了基本上就有五种框架可以使用：</p><ul><li>Hexo</li><li>Hugo</li><li>Typecho</li><li>Halo</li><li>Wordpress</li></ul><p>这个UP主已经把这五种框架的优缺点说得很详细了！为了凑字数显得字多一点，我就简单复述一遍：</p><hr><p><strong>静态博客框架</strong></p><ol><li>Hexo <ul><li>优点：配合Github或者Gitee可以实现0成本搭建博客、用的人比较多问题容易解决</li><li>缺点：Github可能会连不上(可以用魔法或者Gitee)、静态</li></ul></li><li>Hugo<ul><li>优点：比Hexo渲染速度快一点、配置更简单一点</li><li>缺点：用的人少有问题不太好解决、静态</li></ul></li></ol><hr><p><strong>动态博客框架</strong></p><ol><li>Typecho <ul><li>优点：轻量(体积小)、对服务器要求最低</li><li>缺点：扩展性有限(不炫酷)</li></ul></li><li>Halo<ul><li>优点：部署方便、主题丰富、开发者友好、维护方便</li><li>缺点：比较吃服务器配置，推荐服务器内存至少1GB</li></ul></li><li>Wordpress：<ul><li>优点：用的人多、不仅可以搭建博客还可以搭建论坛或者商城、生态丰富插件多</li><li>缺点：由于功能过于强大略显臃肿、吃服务器配置。</li></ul></li></ol><hr><p><strong>那么静态和动态有什么区别？</strong></p><p>当然我不并不精通这个，只是我自己的一点小看法：</p><ol><li><p>静态：</p><ul><li><p>没有后台，只能够通过用指令上传到代码库来更新内容</p></li><li><p>内容的上传是覆盖的，所以你要保证上传的电脑也是配置好了环境并且有最新的内容(在云盘或者U盘上保存)</p></li></ul></li><li><p>动态：</p><ul><li>有后台，可以通过后台页面来实时更新内容</li><li>添加评论等拓展功能比静态方便</li></ul></li></ol><hr><p>最终我决定暂且先搭建一个静态的博客，也就是Hexo+ Github搭建的这个博客。原因有以下几点：</p><ul><li><p>首先呢，我是第一次搭建一个博客，而且是毫无经验，跟着网上的资料一步一步来做的(幸好现在互联网发达！感谢各位写教程的老哥们！)，所以可能会有什么问题出现，那我就先拿Hexo来练一下手。</p></li><li><p>其次呢，我在看视频之前就已经把Hexo的环境配置好了，所以干脆就直接继续做下去。</p></li><li><p>最后呢，当然是我心疼那一百块钱喽！！还是先攒点经验再换平台呗。</p></li></ul><p>然后呢就是开一个《博客搭建日志》来记录我是如何搭建我的博客、如何美化我的博客、一些博客的基本操作，当然这个系列也会持续跟进，每次有什么新花样就会再发一段文字来简述一下，如果对其他人有些许的帮助那就是最好不过的了。</p><p>PS.markdown刚开始用对操作不是很熟练所以就只能写的朴素一点喽。</p>]]></content>
      
      
      <categories>
          
          <category> 《博客搭建日志》 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
